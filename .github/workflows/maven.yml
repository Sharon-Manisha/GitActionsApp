name: Sample Workflow

on:
  #push:
    #branches: sharon_trunk_codefix
  pull_request:
    branches: sharon_trunk_codefix
    types: [closed]
  
env:
  IMAGE_NAME: ${{github.ref_name}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
   # - name: Fail if branch is not main
    #  if: github.ref != 'refs/heads/main'
     # run: |
        #  echo "This workflow should not be triggered with workflow_dispatch on a branch other than main"
         # exit 1
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
          
    - name: List Docker Images
      run: docker images
      
    - name: Tag name dev if default branch
      if: github.ref_name == 'main'
      run: echo "IMAGE_NAME = $IMAGE_NAME"
      env:
        IMAGE_NAME: 'dev'
        
    - name: Set Release version env variable
      run: |
         echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      
    - name: Print new value of env variable
      run: echo "RELEASE_VERSION = $RELEASE_VERSION"

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-docker-img:$RELEASE_VERSION
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: Release ${{ env.RELEASE_VERSION }}
        body: |
           Release Notes:
           ${{ github.event.pull_request.body }} 
        draft: false
        prerelease: true
      
    - name: List Docker Images
      run: docker images
      
    - name : Print Title
      run: echo The Title of your PR is ${{ github.event.pull_request.title }}
  
    - name : Print body of PR
      run: echo The body of your PR is ${{ github.event.pull_request.body }}

